export const ClaimDropAbi = [
    { type: 'error', inputs: [], name: 'ContractMetadataUnauthorized' },
    {
      type: 'error',
      inputs: [
        { name: 'recipient', internalType: 'address', type: 'address' },
        { name: 'value', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'CurrencyTransferLibFailedNativeTransfer',
    },
    {
      type: 'error',
      inputs: [
        { name: 'expected', internalType: 'uint256', type: 'uint256' },
        { name: 'actual', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'DropClaimExceedLimit',
    },
    {
      type: 'error',
      inputs: [
        { name: 'expected', internalType: 'uint256', type: 'uint256' },
        { name: 'actual', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'DropClaimExceedMaxSupply',
    },
    {
      type: 'error',
      inputs: [
        { name: 'expectedCurrency', internalType: 'address', type: 'address' },
        { name: 'expectedPricePerToken', internalType: 'uint256', type: 'uint256' },
        { name: 'actualCurrency', internalType: 'address', type: 'address' },
        { name: 'actualExpectedPricePerToken', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'DropClaimInvalidTokenPrice',
    },
    {
      type: 'error',
      inputs: [
        { name: 'expected', internalType: 'uint256', type: 'uint256' },
        { name: 'actual', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'DropClaimNotStarted',
    },
    { type: 'error', inputs: [], name: 'DropExceedMaxSupply' },
    { type: 'error', inputs: [], name: 'DropNoActiveCondition' },
    { type: 'error', inputs: [], name: 'DropUnauthorized' },
    { type: 'error', inputs: [], name: 'FundraiseDrop_ExceedMaxTotalSupply' },
    { type: 'error', inputs: [], name: 'FundraiseDrop_InvalidAmount' },
    { type: 'error', inputs: [], name: 'FundraiseDrop_InvalidOrderId' },
    { type: 'error', inputs: [], name: 'FundraiseDrop_InvalidPricePerToken' },
    { type: 'error', inputs: [], name: 'FundraiseDrop_InvalidRecipient' },
    {
      type: 'error',
      inputs: [{ name: 'orderId', internalType: 'string', type: 'string' }],
      name: 'FundraiseDrop_OrderExists',
    },
    {
      type: 'error',
      inputs: [
        { name: 'account', internalType: 'address', type: 'address' },
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      ],
      name: 'PermissionsAlreadyGranted',
    },
    {
      type: 'error',
      inputs: [
        { name: 'expected', internalType: 'address', type: 'address' },
        { name: 'actual', internalType: 'address', type: 'address' },
      ],
      name: 'PermissionsInvalidPermission',
    },
    {
      type: 'error',
      inputs: [
        { name: 'account', internalType: 'address', type: 'address' },
        { name: 'neededRole', internalType: 'bytes32', type: 'bytes32' },
      ],
      name: 'PermissionsUnauthorizedAccount',
    },
    {
      type: 'error',
      inputs: [
        { name: 'max', internalType: 'uint256', type: 'uint256' },
        { name: 'actual', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'PlatformFeeExceededMaxFeeBps',
    },
    {
      type: 'error',
      inputs: [{ name: 'recipient', internalType: 'address', type: 'address' }],
      name: 'PlatformFeeInvalidRecipient',
    },
    { type: 'error', inputs: [], name: 'PlatformFeeUnauthorized' },
    {
      type: 'error',
      inputs: [{ name: 'recipient', internalType: 'address', type: 'address' }],
      name: 'PrimarySaleInvalidRecipient',
    },
    { type: 'error', inputs: [], name: 'PrimarySaleUnauthorized' },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'owner', internalType: 'address', type: 'address', indexed: true },
        { name: 'spender', internalType: 'address', type: 'address', indexed: true },
        { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'Approval',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        {
          name: 'claimConditions',
          internalType: 'struct IClaimCondition.ClaimCondition[]',
          type: 'tuple[]',
          components: [
            { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
            { name: 'maxClaimableSupply', internalType: 'uint256', type: 'uint256' },
            { name: 'supplyClaimed', internalType: 'uint256', type: 'uint256' },
            { name: 'quantityLimitPerWallet', internalType: 'uint256', type: 'uint256' },
            { name: 'merkleRoot', internalType: 'bytes32', type: 'bytes32' },
            { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
            { name: 'currency', internalType: 'address', type: 'address' },
            { name: 'metadata', internalType: 'string', type: 'string' },
          ],
          indexed: false,
        },
        { name: 'resetEligibility', internalType: 'bool', type: 'bool', indexed: false },
      ],
      name: 'ClaimConditionsUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'prevURI', internalType: 'string', type: 'string', indexed: false },
        { name: 'newURI', internalType: 'string', type: 'string', indexed: false },
      ],
      name: 'ContractURIUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'delegator', internalType: 'address', type: 'address', indexed: true },
        { name: 'fromDelegate', internalType: 'address', type: 'address', indexed: true },
        { name: 'toDelegate', internalType: 'address', type: 'address', indexed: true },
      ],
      name: 'DelegateChanged',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'delegate', internalType: 'address', type: 'address', indexed: true },
        { name: 'previousBalance', internalType: 'uint256', type: 'uint256', indexed: false },
        { name: 'newBalance', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'DelegateVotesChanged',
    },
    { type: 'event', anonymous: false, inputs: [], name: 'EIP712DomainChanged' },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'platformFeeRecipient', internalType: 'address', type: 'address', indexed: false },
        { name: 'flatFee', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'FlatPlatformFeeUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
      name: 'Initialized',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [{ name: 'maxTotalSupply', internalType: 'uint256', type: 'uint256', indexed: false }],
      name: 'MaxTotalSupplyUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'platformFeeRecipient', internalType: 'address', type: 'address', indexed: true },
        { name: 'platformFeeBps', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'PlatformFeeInfoUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [{ name: 'feeType', internalType: 'enum IPlatformFee.PlatformFeeType', type: 'uint8', indexed: false }],
      name: 'PlatformFeeTypeUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [{ name: 'recipient', internalType: 'address', type: 'address', indexed: true }],
      name: 'PrimarySaleRecipientUpdated',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
        { name: 'previousAdminRole', internalType: 'bytes32', type: 'bytes32', indexed: true },
        { name: 'newAdminRole', internalType: 'bytes32', type: 'bytes32', indexed: true },
      ],
      name: 'RoleAdminChanged',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
        { name: 'account', internalType: 'address', type: 'address', indexed: true },
        { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      ],
      name: 'RoleGranted',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
        { name: 'account', internalType: 'address', type: 'address', indexed: true },
        { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      ],
      name: 'RoleRevoked',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'claimConditionIndex', internalType: 'uint256', type: 'uint256', indexed: true },
        { name: 'claimer', internalType: 'address', type: 'address', indexed: true },
        { name: 'receiver', internalType: 'address', type: 'address', indexed: true },
        { name: 'startTokenId', internalType: 'uint256', type: 'uint256', indexed: false },
        { name: 'quantityClaimed', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'TokensClaimed',
    },
    {
      type: 'event',
      anonymous: false,
      inputs: [
        { name: 'from', internalType: 'address', type: 'address', indexed: true },
        { name: 'to', internalType: 'address', type: 'address', indexed: true },
        { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      ],
      name: 'Transfer',
    },
    {
      type: 'function',
      inputs: [],
      name: 'CLOCK_MODE',
      outputs: [{ name: '', internalType: 'string', type: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'DEFAULT_ADMIN_ROLE',
      outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'DOMAIN_SEPARATOR',
      outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'SALE_AGENT_ROLE',
      outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'owner', internalType: 'address', type: 'address' },
        { name: 'spender', internalType: 'address', type: 'address' },
      ],
      name: 'allowance',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'spender', internalType: 'address', type: 'address' },
        { name: 'amount', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'approve',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
      name: 'balanceOf',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
      name: 'burn',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'account', internalType: 'address', type: 'address' },
        { name: 'amount', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'burnFrom',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'account', internalType: 'address', type: 'address' },
        { name: 'pos', internalType: 'uint32', type: 'uint32' },
      ],
      name: 'checkpoints',
      outputs: [
        {
          name: '',
          internalType: 'struct ERC20VotesUpgradeable.Checkpoint',
          type: 'tuple',
          components: [
            { name: 'fromBlock', internalType: 'uint32', type: 'uint32' },
            { name: 'votes', internalType: 'uint224', type: 'uint224' },
          ],
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: '_receiver', internalType: 'address', type: 'address' },
        { name: '_quantity', internalType: 'uint256', type: 'uint256' },
        { name: '_currency', internalType: 'address', type: 'address' },
        { name: '_pricePerToken', internalType: 'uint256', type: 'uint256' },
        {
          name: '_allowlistProof',
          internalType: 'struct IDrop.AllowlistProof',
          type: 'tuple',
          components: [
            { name: 'proof', internalType: 'bytes32[]', type: 'bytes32[]' },
            { name: 'quantityLimitPerWallet', internalType: 'uint256', type: 'uint256' },
            { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
            { name: 'currency', internalType: 'address', type: 'address' },
          ],
        },
        { name: '_data', internalType: 'bytes', type: 'bytes' },
      ],
      name: 'claim',
      outputs: [],
      stateMutability: 'payable',
    },
    {
      type: 'function',
      inputs: [],
      name: 'claimCondition',
      outputs: [
        { name: 'currentStartId', internalType: 'uint256', type: 'uint256' },
        { name: 'count', internalType: 'uint256', type: 'uint256' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'clock',
      outputs: [{ name: '', internalType: 'uint48', type: 'uint48' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'contractType',
      outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
      stateMutability: 'pure',
    },
    {
      type: 'function',
      inputs: [],
      name: 'contractURI',
      outputs: [{ name: '', internalType: 'string', type: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'contractVersion',
      outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
      stateMutability: 'pure',
    },
    {
      type: 'function',
      inputs: [
        { name: 'orderId', internalType: 'string', type: 'string' },
        { name: 'recipient', internalType: 'address', type: 'address' },
        { name: 'quantity', internalType: 'uint256', type: 'uint256' },
        { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'createOrder',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [],
      name: 'decimals',
      outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'spender', internalType: 'address', type: 'address' },
        { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'decreaseAllowance',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: 'delegatee', internalType: 'address', type: 'address' }],
      name: 'delegate',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'delegatee', internalType: 'address', type: 'address' },
        { name: 'nonce', internalType: 'uint256', type: 'uint256' },
        { name: 'expiry', internalType: 'uint256', type: 'uint256' },
        { name: 'v', internalType: 'uint8', type: 'uint8' },
        { name: 'r', internalType: 'bytes32', type: 'bytes32' },
        { name: 's', internalType: 'bytes32', type: 'bytes32' },
      ],
      name: 'delegateBySig',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
      name: 'delegates',
      outputs: [{ name: '', internalType: 'address', type: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'eip712Domain',
      outputs: [
        { name: 'fields', internalType: 'bytes1', type: 'bytes1' },
        { name: 'name', internalType: 'string', type: 'string' },
        { name: 'version', internalType: 'string', type: 'string' },
        { name: 'chainId', internalType: 'uint256', type: 'uint256' },
        { name: 'verifyingContract', internalType: 'address', type: 'address' },
        { name: 'salt', internalType: 'bytes32', type: 'bytes32' },
        { name: 'extensions', internalType: 'uint256[]', type: 'uint256[]' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'getActiveClaimConditionId',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: '_conditionId', internalType: 'uint256', type: 'uint256' }],
      name: 'getClaimConditionById',
      outputs: [
        {
          name: 'condition',
          internalType: 'struct IClaimCondition.ClaimCondition',
          type: 'tuple',
          components: [
            { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
            { name: 'maxClaimableSupply', internalType: 'uint256', type: 'uint256' },
            { name: 'supplyClaimed', internalType: 'uint256', type: 'uint256' },
            { name: 'quantityLimitPerWallet', internalType: 'uint256', type: 'uint256' },
            { name: 'merkleRoot', internalType: 'bytes32', type: 'bytes32' },
            { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
            { name: 'currency', internalType: 'address', type: 'address' },
            { name: 'metadata', internalType: 'string', type: 'string' },
          ],
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'getFlatPlatformFeeInfo',
      outputs: [
        { name: '', internalType: 'address', type: 'address' },
        { name: '', internalType: 'uint256', type: 'uint256' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'timepoint', internalType: 'uint256', type: 'uint256' }],
      name: 'getPastTotalSupply',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'account', internalType: 'address', type: 'address' },
        { name: 'timepoint', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'getPastVotes',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'getPlatformFeeInfo',
      outputs: [
        { name: '', internalType: 'address', type: 'address' },
        { name: '', internalType: 'uint16', type: 'uint16' },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'getPlatformFeeType',
      outputs: [{ name: '', internalType: 'enum IPlatformFee.PlatformFeeType', type: 'uint8' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
      name: 'getRoleAdmin',
      outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'index', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'getRoleMember',
      outputs: [{ name: 'member', internalType: 'address', type: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
      name: 'getRoleMemberCount',
      outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: '_conditionId', internalType: 'uint256', type: 'uint256' },
        { name: '_claimer', internalType: 'address', type: 'address' },
      ],
      name: 'getSupplyClaimedByWallet',
      outputs: [{ name: 'supplyClaimedByWallet', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
      name: 'getVotes',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'account', internalType: 'address', type: 'address' },
      ],
      name: 'grantRole',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'account', internalType: 'address', type: 'address' },
      ],
      name: 'hasRole',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'account', internalType: 'address', type: 'address' },
      ],
      name: 'hasRoleWithSwitch',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'spender', internalType: 'address', type: 'address' },
        { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'increaseAllowance',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: '_defaultAdmin', internalType: 'address', type: 'address' },
        { name: '_name', internalType: 'string', type: 'string' },
        { name: '_symbol', internalType: 'string', type: 'string' },
        { name: '_contractURI', internalType: 'string', type: 'string' },
        { name: '_trustedForwarders', internalType: 'address[]', type: 'address[]' },
        { name: '_saleRecipient', internalType: 'address', type: 'address' },
        { name: '_platformFeeRecipient', internalType: 'address', type: 'address' },
        { name: '_platformFeeBps', internalType: 'uint128', type: 'uint128' },
      ],
      name: 'initialize',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: 'forwarder', internalType: 'address', type: 'address' }],
      name: 'isTrustedForwarder',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'maxTotalSupply',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'to', internalType: 'address', type: 'address' },
        { name: 'amount', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'mint',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: 'data', internalType: 'bytes[]', type: 'bytes[]' }],
      name: 'multicall',
      outputs: [{ name: 'results', internalType: 'bytes[]', type: 'bytes[]' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [],
      name: 'name',
      outputs: [{ name: '', internalType: 'string', type: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
      name: 'nonces',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
      name: 'numCheckpoints',
      outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'owner', internalType: 'address', type: 'address' },
        { name: 'spender', internalType: 'address', type: 'address' },
        { name: 'value', internalType: 'uint256', type: 'uint256' },
        { name: 'deadline', internalType: 'uint256', type: 'uint256' },
        { name: 'v', internalType: 'uint8', type: 'uint8' },
        { name: 'r', internalType: 'bytes32', type: 'bytes32' },
        { name: 's', internalType: 'bytes32', type: 'bytes32' },
      ],
      name: 'permit',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [],
      name: 'primarySaleRecipient',
      outputs: [{ name: '', internalType: 'address', type: 'address' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'account', internalType: 'address', type: 'address' },
      ],
      name: 'renounceRole',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'role', internalType: 'bytes32', type: 'bytes32' },
        { name: 'account', internalType: 'address', type: 'address' },
      ],
      name: 'revokeRole',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        {
          name: '_conditions',
          internalType: 'struct IClaimCondition.ClaimCondition[]',
          type: 'tuple[]',
          components: [
            { name: 'startTimestamp', internalType: 'uint256', type: 'uint256' },
            { name: 'maxClaimableSupply', internalType: 'uint256', type: 'uint256' },
            { name: 'supplyClaimed', internalType: 'uint256', type: 'uint256' },
            { name: 'quantityLimitPerWallet', internalType: 'uint256', type: 'uint256' },
            { name: 'merkleRoot', internalType: 'bytes32', type: 'bytes32' },
            { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
            { name: 'currency', internalType: 'address', type: 'address' },
            { name: 'metadata', internalType: 'string', type: 'string' },
          ],
        },
        { name: '_resetClaimEligibility', internalType: 'bool', type: 'bool' },
      ],
      name: 'setClaimConditions',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: '_uri', internalType: 'string', type: 'string' }],
      name: 'setContractURI',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: '_platformFeeRecipient', internalType: 'address', type: 'address' },
        { name: '_flatFee', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'setFlatPlatformFeeInfo',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: '_maxTotalSupply', internalType: 'uint256', type: 'uint256' }],
      name: 'setMaxTotalSupply',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: '_platformFeeRecipient', internalType: 'address', type: 'address' },
        { name: '_platformFeeBps', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'setPlatformFeeInfo',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: '_feeType', internalType: 'enum IPlatformFee.PlatformFeeType', type: 'uint8' }],
      name: 'setPlatformFeeType',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [{ name: '_saleRecipient', internalType: 'address', type: 'address' }],
      name: 'setPrimarySaleRecipient',
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [],
      name: 'symbol',
      outputs: [{ name: '', internalType: 'string', type: 'string' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'totalRaised',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [],
      name: 'totalSupply',
      outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
      stateMutability: 'view',
    },
    {
      type: 'function',
      inputs: [
        { name: 'to', internalType: 'address', type: 'address' },
        { name: 'amount', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'transfer',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: 'from', internalType: 'address', type: 'address' },
        { name: 'to', internalType: 'address', type: 'address' },
        { name: 'amount', internalType: 'uint256', type: 'uint256' },
      ],
      name: 'transferFrom',
      outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      inputs: [
        { name: '_conditionId', internalType: 'uint256', type: 'uint256' },
        { name: '_claimer', internalType: 'address', type: 'address' },
        { name: '_quantity', internalType: 'uint256', type: 'uint256' },
        { name: '_currency', internalType: 'address', type: 'address' },
        { name: '_pricePerToken', internalType: 'uint256', type: 'uint256' },
        {
          name: '_allowlistProof',
          internalType: 'struct IDrop.AllowlistProof',
          type: 'tuple',
          components: [
            { name: 'proof', internalType: 'bytes32[]', type: 'bytes32[]' },
            { name: 'quantityLimitPerWallet', internalType: 'uint256', type: 'uint256' },
            { name: 'pricePerToken', internalType: 'uint256', type: 'uint256' },
            { name: 'currency', internalType: 'address', type: 'address' },
          ],
        },
      ],
      name: 'verifyClaim',
      outputs: [{ name: 'isOverride', internalType: 'bool', type: 'bool' }],
      stateMutability: 'view',
    },
  ] as const;